apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: vsphere.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: pools.resource.vsphere.kubeform.com
spec:
  group: resource.vsphere.kubeform.com
  names:
    kind: Pool
    listKind: PoolList
    plural: pools
    singular: pool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  cpuExpandable:
                    description: Determines if the reservation on a resource pool
                      can grow beyond the specified value, if the parent resource
                      pool has unreserved resources.
                    type: boolean
                  cpuLimit:
                    description: The utilization of a resource pool will not exceed
                      this limit, even if there are available resources. Set to -1
                      for unlimited.
                    format: int64
                    type: integer
                  cpuReservation:
                    description: Amount of CPU (MHz) that is guaranteed available
                      to the resource pool.
                    format: int64
                    type: integer
                  cpuShareLevel:
                    description: The allocation level. The level is a simplified view
                      of shares. Levels map to a pre-determined set of numeric values
                      for shares. Can be one of low, normal, high, or custom.
                    type: string
                  cpuShares:
                    description: The number of shares allocated. Used to determine
                      resource allocation in case of resource contention. If this
                      is set, cpu_share_level must be custom.
                    format: int64
                    type: integer
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  id:
                    type: string
                  memoryExpandable:
                    description: Determines if the reservation on a resource pool
                      can grow beyond the specified value, if the parent resource
                      pool has unreserved resources.
                    type: boolean
                  memoryLimit:
                    description: The utilization of a resource pool will not exceed
                      this limit, even if there are available resources. Set to -1
                      for unlimited.
                    format: int64
                    type: integer
                  memoryReservation:
                    description: Amount of memory (MB) that is guaranteed available
                      to the resource pool.
                    format: int64
                    type: integer
                  memoryShareLevel:
                    description: The allocation level. The level is a simplified view
                      of shares. Levels map to a pre-determined set of numeric values
                      for shares. Can be one of low, normal, high, or custom.
                    type: string
                  memoryShares:
                    description: The number of shares allocated. Used to determine
                      resource allocation in case of resource contention. If this
                      is set, memory_share_level must be custom.
                    format: int64
                    type: integer
                  name:
                    description: Name of resource pool.
                    type: string
                  parentResourcePoolID:
                    description: The ID of the root resource pool of the compute resource
                      the resource pool is in.
                    type: string
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                required:
                - name
                - parentResourcePoolID
                type: object
              state:
                properties:
                  cpuExpandable:
                    description: Determines if the reservation on a resource pool
                      can grow beyond the specified value, if the parent resource
                      pool has unreserved resources.
                    type: boolean
                  cpuLimit:
                    description: The utilization of a resource pool will not exceed
                      this limit, even if there are available resources. Set to -1
                      for unlimited.
                    format: int64
                    type: integer
                  cpuReservation:
                    description: Amount of CPU (MHz) that is guaranteed available
                      to the resource pool.
                    format: int64
                    type: integer
                  cpuShareLevel:
                    description: The allocation level. The level is a simplified view
                      of shares. Levels map to a pre-determined set of numeric values
                      for shares. Can be one of low, normal, high, or custom.
                    type: string
                  cpuShares:
                    description: The number of shares allocated. Used to determine
                      resource allocation in case of resource contention. If this
                      is set, cpu_share_level must be custom.
                    format: int64
                    type: integer
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  id:
                    type: string
                  memoryExpandable:
                    description: Determines if the reservation on a resource pool
                      can grow beyond the specified value, if the parent resource
                      pool has unreserved resources.
                    type: boolean
                  memoryLimit:
                    description: The utilization of a resource pool will not exceed
                      this limit, even if there are available resources. Set to -1
                      for unlimited.
                    format: int64
                    type: integer
                  memoryReservation:
                    description: Amount of memory (MB) that is guaranteed available
                      to the resource pool.
                    format: int64
                    type: integer
                  memoryShareLevel:
                    description: The allocation level. The level is a simplified view
                      of shares. Levels map to a pre-determined set of numeric values
                      for shares. Can be one of low, normal, high, or custom.
                    type: string
                  memoryShares:
                    description: The number of shares allocated. Used to determine
                      resource allocation in case of resource contention. If this
                      is set, memory_share_level must be custom.
                    format: int64
                    type: integer
                  name:
                    description: Name of resource pool.
                    type: string
                  parentResourcePoolID:
                    description: The ID of the root resource pool of the compute resource
                      the resource pool is in.
                    type: string
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                required:
                - name
                - parentResourcePoolID
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
