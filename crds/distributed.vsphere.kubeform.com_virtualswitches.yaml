apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: vsphere.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: virtualswitches.distributed.vsphere.kubeform.com
spec:
  group: distributed.vsphere.kubeform.com
  names:
    kind: VirtualSwitch
    listKind: VirtualSwitchList
    plural: virtualswitches
    singular: virtualswitch
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  activeUplinks:
                    description: List of active uplinks used for load balancing, matching
                      the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  allowForgedTransmits:
                    description: Controls whether or not the virtual network adapter
                      is allowed to send network traffic with a different MAC address
                      than that of its own.
                    type: boolean
                  allowMACChanges:
                    description: Controls whether or not the Media Access Control
                      (MAC) address can be changed.
                    type: boolean
                  allowPromiscuous:
                    description: Enable promiscuous mode on the network. This flag
                      indicates whether or not all traffic is seen on a given port.
                    type: boolean
                  backupnfcMaximumMbit:
                    description: The maximum allowed usage for the backupNfc traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  backupnfcReservationMbit:
                    description: The amount of guaranteed bandwidth for the backupNfc
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  backupnfcShareCount:
                    description: The amount of shares to allocate to the backupNfc
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  backupnfcShareLevel:
                    description: The allocation level for the backupNfc traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  blockAllPorts:
                    description: Indicates whether to block all ports by default.
                    type: boolean
                  checkBeacon:
                    description: Enable beacon probing on the ports this policy applies
                      to.
                    type: boolean
                  configVersion:
                    description: The version string of the configuration that this
                      spec is trying to change.
                    type: string
                  contactDetail:
                    description: The contact detail for this DVS.
                    type: string
                  contactName:
                    description: The contact name for this DVS.
                    type: string
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterID:
                    description: The ID of the datacenter to create this virtual switch
                      in.
                    type: string
                  description:
                    description: The description of the DVS.
                    type: string
                  directpathGen2Allowed:
                    description: Allow VMDirectPath Gen2 on the ports this policy
                      applies to.
                    type: boolean
                  egressShapingAverageBandwidth:
                    description: The average egress bandwidth in bits per second if
                      egress shaping is enabled on the port.
                    format: int64
                    type: integer
                  egressShapingBurstSize:
                    description: The maximum egress burst size allowed in bytes if
                      egress shaping is enabled on the port.
                    format: int64
                    type: integer
                  egressShapingEnabled:
                    description: True if the traffic shaper is enabled for egress
                      traffic on the port.
                    type: boolean
                  egressShapingPeakBandwidth:
                    description: The peak egress bandwidth during bursts in bits per
                      second if egress traffic shaping is enabled on the port.
                    format: int64
                    type: integer
                  failback:
                    description: If true, the teaming policy will re-activate failed
                      interfaces higher in precedence when they come back up.
                    type: boolean
                  faulttoleranceMaximumMbit:
                    description: The maximum allowed usage for the faultTolerance
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  faulttoleranceReservationMbit:
                    description: The amount of guaranteed bandwidth for the faultTolerance
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  faulttoleranceShareCount:
                    description: The amount of shares to allocate to the faultTolerance
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  faulttoleranceShareLevel:
                    description: The allocation level for the faultTolerance traffic
                      class. Can be one of high, low, normal, or custom.
                    type: string
                  folder:
                    description: The folder to create this virtual switch in, relative
                      to the datacenter.
                    type: string
                  hbrMaximumMbit:
                    description: The maximum allowed usage for the hbr traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  hbrReservationMbit:
                    description: The amount of guaranteed bandwidth for the hbr traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  hbrShareCount:
                    description: The amount of shares to allocate to the hbr traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  hbrShareLevel:
                    description: The allocation level for the hbr traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  host:
                    description: A host member specification.
                    items:
                      properties:
                        devices:
                          description: Name of the physical NIC to be added to the
                            proxy switch.
                          items:
                            type: string
                          minItems: 1
                          type: array
                        hostSystemID:
                          description: The managed object ID of the host this specification
                            applies to.
                          type: string
                      required:
                      - devices
                      - hostSystemID
                      type: object
                    type: array
                  id:
                    type: string
                  ignoreOtherPvlanMappings:
                    description: Whether to ignore existing PVLAN mappings not managed
                      by this resource. Defaults to false.
                    type: boolean
                  ingressShapingAverageBandwidth:
                    description: The average ingress bandwidth in bits per second
                      if ingress shaping is enabled on the port.
                    format: int64
                    type: integer
                  ingressShapingBurstSize:
                    description: The maximum ingress burst size allowed in bytes if
                      ingress shaping is enabled on the port.
                    format: int64
                    type: integer
                  ingressShapingEnabled:
                    description: True if the traffic shaper is enabled for ingress
                      traffic on the port.
                    type: boolean
                  ingressShapingPeakBandwidth:
                    description: The peak ingress bandwidth during bursts in bits
                      per second if ingress traffic shaping is enabled on the port.
                    format: int64
                    type: integer
                  ipv4Address:
                    description: The IPv4 address of the switch. This can be used
                      to see the DVS as a unique device with NetFlow.
                    type: string
                  iscsiMaximumMbit:
                    description: The maximum allowed usage for the iSCSI traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  iscsiReservationMbit:
                    description: The amount of guaranteed bandwidth for the iSCSI
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  iscsiShareCount:
                    description: The amount of shares to allocate to the iSCSI traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  iscsiShareLevel:
                    description: The allocation level for the iSCSI traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  lacpAPIVersion:
                    description: The Link Aggregation Control Protocol group version
                      in the switch. Can be one of singleLag or multipleLag.
                    type: string
                  lacpEnabled:
                    description: Whether or not to enable LACP on all uplink ports.
                    type: boolean
                  lacpMode:
                    description: The uplink LACP mode to use. Can be one of active
                      or passive.
                    type: string
                  linkDiscoveryOperation:
                    description: Whether to advertise or listen for link discovery.
                      Valid values are advertise, both, listen, and none.
                    type: string
                  linkDiscoveryProtocol:
                    description: The discovery protocol type. Valid values are cdp
                      and lldp.
                    type: string
                  managementMaximumMbit:
                    description: The maximum allowed usage for the management traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  managementReservationMbit:
                    description: The amount of guaranteed bandwidth for the management
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  managementShareCount:
                    description: The amount of shares to allocate to the management
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  managementShareLevel:
                    description: The allocation level for the management traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  maxMTU:
                    description: The maximum MTU on the switch.
                    format: int64
                    type: integer
                  multicastFilteringMode:
                    description: The multicast filtering mode on the switch. Can be
                      one of legacyFiltering, or snooping.
                    type: string
                  name:
                    description: The name for the DVS. Must be unique in the folder
                      that it is being created in.
                    type: string
                  netflowActiveFlowTimeout:
                    description: The number of seconds after which active flows are
                      forced to be exported to the collector.
                    format: int64
                    type: integer
                  netflowCollectorIPAddress:
                    description: IP address for the netflow collector, using IPv4
                      or IPv6. IPv6 is supported in vSphere Distributed Switch Version
                      6.0 or later.
                    type: string
                  netflowCollectorPort:
                    description: The port for the netflow collector.
                    format: int64
                    type: integer
                  netflowEnabled:
                    description: Indicates whether to enable netflow on all ports.
                    type: boolean
                  netflowIdleFlowTimeout:
                    description: The number of seconds after which idle flows are
                      forced to be exported to the collector.
                    format: int64
                    type: integer
                  netflowInternalFlowsOnly:
                    description: Whether to limit analysis to traffic that has both
                      source and destination served by the same host.
                    type: boolean
                  netflowObservationDomainID:
                    description: The observation Domain ID for the netflow collector.
                    format: int64
                    type: integer
                  netflowSamplingRate:
                    description: The ratio of total number of packets to the number
                      of packets analyzed. Set to 0 to disable sampling, meaning that
                      all packets are analyzed.
                    format: int64
                    type: integer
                  networkResourceControlEnabled:
                    description: Whether or not to enable network resource control,
                      enabling advanced traffic shaping and resource control features.
                    type: boolean
                  networkResourceControlVersion:
                    description: The network I/O control version to use. Can be one
                      of version2 or version3.
                    type: string
                  nfsMaximumMbit:
                    description: The maximum allowed usage for the nfs traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  nfsReservationMbit:
                    description: The amount of guaranteed bandwidth for the nfs traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  nfsShareCount:
                    description: The amount of shares to allocate to the nfs traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  nfsShareLevel:
                    description: The allocation level for the nfs traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  notifySwitches:
                    description: If true, the teaming policy will notify the broadcast
                      network of a NIC failover, triggering cache updates.
                    type: boolean
                  portPrivateSecondaryVLANID:
                    description: The secondary VLAN ID for this port.
                    format: int64
                    type: integer
                  pvlanMapping:
                    description: A private VLAN (PVLAN) mapping.
                    items:
                      properties:
                        primaryVLANID:
                          description: The primary VLAN ID. The VLAN IDs of 0 and
                            4095 are reserved and cannot be used in this property.
                          format: int64
                          type: integer
                        pvlanType:
                          description: The private VLAN type. Valid values are promiscuous,
                            community and isolated.
                          type: string
                        secondaryVLANID:
                          description: The secondary VLAN ID. The VLAN IDs of 0 and
                            4095 are reserved and cannot be used in this property.
                          format: int64
                          type: integer
                      required:
                      - primaryVLANID
                      - pvlanType
                      - secondaryVLANID
                      type: object
                    type: array
                  standbyUplinks:
                    description: List of standby uplinks used for load balancing,
                      matching the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                  teamingPolicy:
                    description: The network adapter teaming policy. Can be one of
                      loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, failover_explicit,
                      or loadbalance_loadbased.
                    type: string
                  txUplink:
                    description: If true, a copy of packets sent to the switch will
                      always be forwarded to an uplink in addition to the regular
                      packet forwarded done by the switch.
                    type: boolean
                  uplinks:
                    description: A list of uplink ports. The contents of this list
                      control both the uplink count and names of the uplinks on the
                      DVS across hosts.
                    items:
                      type: string
                    type: array
                  vdpMaximumMbit:
                    description: The maximum allowed usage for the vdp traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  vdpReservationMbit:
                    description: The amount of guaranteed bandwidth for the vdp traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  vdpShareCount:
                    description: The amount of shares to allocate to the vdp traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  vdpShareLevel:
                    description: The allocation level for the vdp traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  version:
                    description: The version of this virtual switch. Allowed versions
                      are 7.0.0, 6.5.0, 6.0.0, 5.5.0, 5.1.0, and 5.0.0.
                    type: string
                  virtualmachineMaximumMbit:
                    description: The maximum allowed usage for the virtualMachine
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  virtualmachineReservationMbit:
                    description: The amount of guaranteed bandwidth for the virtualMachine
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  virtualmachineShareCount:
                    description: The amount of shares to allocate to the virtualMachine
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  virtualmachineShareLevel:
                    description: The allocation level for the virtualMachine traffic
                      class. Can be one of high, low, normal, or custom.
                    type: string
                  vlanID:
                    description: The VLAN ID for single VLAN mode. 0 denotes no VLAN.
                    format: int64
                    type: integer
                  vlanRange:
                    description: The VLAN ID for single VLAN mode. 0 denotes no VLAN.
                    items:
                      properties:
                        maxVLAN:
                          description: The minimum VLAN to use in the range.
                          format: int64
                          type: integer
                        minVLAN:
                          description: The minimum VLAN to use in the range.
                          format: int64
                          type: integer
                      required:
                      - maxVLAN
                      - minVLAN
                      type: object
                    type: array
                  vmotionMaximumMbit:
                    description: The maximum allowed usage for the vmotion traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  vmotionReservationMbit:
                    description: The amount of guaranteed bandwidth for the vmotion
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  vmotionShareCount:
                    description: The amount of shares to allocate to the vmotion traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  vmotionShareLevel:
                    description: The allocation level for the vmotion traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  vsanMaximumMbit:
                    description: The maximum allowed usage for the vsan traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  vsanReservationMbit:
                    description: The amount of guaranteed bandwidth for the vsan traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  vsanShareCount:
                    description: The amount of shares to allocate to the vsan traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  vsanShareLevel:
                    description: The allocation level for the vsan traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                required:
                - datacenterID
                - name
                type: object
              state:
                properties:
                  activeUplinks:
                    description: List of active uplinks used for load balancing, matching
                      the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  allowForgedTransmits:
                    description: Controls whether or not the virtual network adapter
                      is allowed to send network traffic with a different MAC address
                      than that of its own.
                    type: boolean
                  allowMACChanges:
                    description: Controls whether or not the Media Access Control
                      (MAC) address can be changed.
                    type: boolean
                  allowPromiscuous:
                    description: Enable promiscuous mode on the network. This flag
                      indicates whether or not all traffic is seen on a given port.
                    type: boolean
                  backupnfcMaximumMbit:
                    description: The maximum allowed usage for the backupNfc traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  backupnfcReservationMbit:
                    description: The amount of guaranteed bandwidth for the backupNfc
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  backupnfcShareCount:
                    description: The amount of shares to allocate to the backupNfc
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  backupnfcShareLevel:
                    description: The allocation level for the backupNfc traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  blockAllPorts:
                    description: Indicates whether to block all ports by default.
                    type: boolean
                  checkBeacon:
                    description: Enable beacon probing on the ports this policy applies
                      to.
                    type: boolean
                  configVersion:
                    description: The version string of the configuration that this
                      spec is trying to change.
                    type: string
                  contactDetail:
                    description: The contact detail for this DVS.
                    type: string
                  contactName:
                    description: The contact name for this DVS.
                    type: string
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterID:
                    description: The ID of the datacenter to create this virtual switch
                      in.
                    type: string
                  description:
                    description: The description of the DVS.
                    type: string
                  directpathGen2Allowed:
                    description: Allow VMDirectPath Gen2 on the ports this policy
                      applies to.
                    type: boolean
                  egressShapingAverageBandwidth:
                    description: The average egress bandwidth in bits per second if
                      egress shaping is enabled on the port.
                    format: int64
                    type: integer
                  egressShapingBurstSize:
                    description: The maximum egress burst size allowed in bytes if
                      egress shaping is enabled on the port.
                    format: int64
                    type: integer
                  egressShapingEnabled:
                    description: True if the traffic shaper is enabled for egress
                      traffic on the port.
                    type: boolean
                  egressShapingPeakBandwidth:
                    description: The peak egress bandwidth during bursts in bits per
                      second if egress traffic shaping is enabled on the port.
                    format: int64
                    type: integer
                  failback:
                    description: If true, the teaming policy will re-activate failed
                      interfaces higher in precedence when they come back up.
                    type: boolean
                  faulttoleranceMaximumMbit:
                    description: The maximum allowed usage for the faultTolerance
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  faulttoleranceReservationMbit:
                    description: The amount of guaranteed bandwidth for the faultTolerance
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  faulttoleranceShareCount:
                    description: The amount of shares to allocate to the faultTolerance
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  faulttoleranceShareLevel:
                    description: The allocation level for the faultTolerance traffic
                      class. Can be one of high, low, normal, or custom.
                    type: string
                  folder:
                    description: The folder to create this virtual switch in, relative
                      to the datacenter.
                    type: string
                  hbrMaximumMbit:
                    description: The maximum allowed usage for the hbr traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  hbrReservationMbit:
                    description: The amount of guaranteed bandwidth for the hbr traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  hbrShareCount:
                    description: The amount of shares to allocate to the hbr traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  hbrShareLevel:
                    description: The allocation level for the hbr traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  host:
                    description: A host member specification.
                    items:
                      properties:
                        devices:
                          description: Name of the physical NIC to be added to the
                            proxy switch.
                          items:
                            type: string
                          minItems: 1
                          type: array
                        hostSystemID:
                          description: The managed object ID of the host this specification
                            applies to.
                          type: string
                      required:
                      - devices
                      - hostSystemID
                      type: object
                    type: array
                  id:
                    type: string
                  ignoreOtherPvlanMappings:
                    description: Whether to ignore existing PVLAN mappings not managed
                      by this resource. Defaults to false.
                    type: boolean
                  ingressShapingAverageBandwidth:
                    description: The average ingress bandwidth in bits per second
                      if ingress shaping is enabled on the port.
                    format: int64
                    type: integer
                  ingressShapingBurstSize:
                    description: The maximum ingress burst size allowed in bytes if
                      ingress shaping is enabled on the port.
                    format: int64
                    type: integer
                  ingressShapingEnabled:
                    description: True if the traffic shaper is enabled for ingress
                      traffic on the port.
                    type: boolean
                  ingressShapingPeakBandwidth:
                    description: The peak ingress bandwidth during bursts in bits
                      per second if ingress traffic shaping is enabled on the port.
                    format: int64
                    type: integer
                  ipv4Address:
                    description: The IPv4 address of the switch. This can be used
                      to see the DVS as a unique device with NetFlow.
                    type: string
                  iscsiMaximumMbit:
                    description: The maximum allowed usage for the iSCSI traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  iscsiReservationMbit:
                    description: The amount of guaranteed bandwidth for the iSCSI
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  iscsiShareCount:
                    description: The amount of shares to allocate to the iSCSI traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  iscsiShareLevel:
                    description: The allocation level for the iSCSI traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  lacpAPIVersion:
                    description: The Link Aggregation Control Protocol group version
                      in the switch. Can be one of singleLag or multipleLag.
                    type: string
                  lacpEnabled:
                    description: Whether or not to enable LACP on all uplink ports.
                    type: boolean
                  lacpMode:
                    description: The uplink LACP mode to use. Can be one of active
                      or passive.
                    type: string
                  linkDiscoveryOperation:
                    description: Whether to advertise or listen for link discovery.
                      Valid values are advertise, both, listen, and none.
                    type: string
                  linkDiscoveryProtocol:
                    description: The discovery protocol type. Valid values are cdp
                      and lldp.
                    type: string
                  managementMaximumMbit:
                    description: The maximum allowed usage for the management traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  managementReservationMbit:
                    description: The amount of guaranteed bandwidth for the management
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  managementShareCount:
                    description: The amount of shares to allocate to the management
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  managementShareLevel:
                    description: The allocation level for the management traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  maxMTU:
                    description: The maximum MTU on the switch.
                    format: int64
                    type: integer
                  multicastFilteringMode:
                    description: The multicast filtering mode on the switch. Can be
                      one of legacyFiltering, or snooping.
                    type: string
                  name:
                    description: The name for the DVS. Must be unique in the folder
                      that it is being created in.
                    type: string
                  netflowActiveFlowTimeout:
                    description: The number of seconds after which active flows are
                      forced to be exported to the collector.
                    format: int64
                    type: integer
                  netflowCollectorIPAddress:
                    description: IP address for the netflow collector, using IPv4
                      or IPv6. IPv6 is supported in vSphere Distributed Switch Version
                      6.0 or later.
                    type: string
                  netflowCollectorPort:
                    description: The port for the netflow collector.
                    format: int64
                    type: integer
                  netflowEnabled:
                    description: Indicates whether to enable netflow on all ports.
                    type: boolean
                  netflowIdleFlowTimeout:
                    description: The number of seconds after which idle flows are
                      forced to be exported to the collector.
                    format: int64
                    type: integer
                  netflowInternalFlowsOnly:
                    description: Whether to limit analysis to traffic that has both
                      source and destination served by the same host.
                    type: boolean
                  netflowObservationDomainID:
                    description: The observation Domain ID for the netflow collector.
                    format: int64
                    type: integer
                  netflowSamplingRate:
                    description: The ratio of total number of packets to the number
                      of packets analyzed. Set to 0 to disable sampling, meaning that
                      all packets are analyzed.
                    format: int64
                    type: integer
                  networkResourceControlEnabled:
                    description: Whether or not to enable network resource control,
                      enabling advanced traffic shaping and resource control features.
                    type: boolean
                  networkResourceControlVersion:
                    description: The network I/O control version to use. Can be one
                      of version2 or version3.
                    type: string
                  nfsMaximumMbit:
                    description: The maximum allowed usage for the nfs traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  nfsReservationMbit:
                    description: The amount of guaranteed bandwidth for the nfs traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  nfsShareCount:
                    description: The amount of shares to allocate to the nfs traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  nfsShareLevel:
                    description: The allocation level for the nfs traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  notifySwitches:
                    description: If true, the teaming policy will notify the broadcast
                      network of a NIC failover, triggering cache updates.
                    type: boolean
                  portPrivateSecondaryVLANID:
                    description: The secondary VLAN ID for this port.
                    format: int64
                    type: integer
                  pvlanMapping:
                    description: A private VLAN (PVLAN) mapping.
                    items:
                      properties:
                        primaryVLANID:
                          description: The primary VLAN ID. The VLAN IDs of 0 and
                            4095 are reserved and cannot be used in this property.
                          format: int64
                          type: integer
                        pvlanType:
                          description: The private VLAN type. Valid values are promiscuous,
                            community and isolated.
                          type: string
                        secondaryVLANID:
                          description: The secondary VLAN ID. The VLAN IDs of 0 and
                            4095 are reserved and cannot be used in this property.
                          format: int64
                          type: integer
                      required:
                      - primaryVLANID
                      - pvlanType
                      - secondaryVLANID
                      type: object
                    type: array
                  standbyUplinks:
                    description: List of standby uplinks used for load balancing,
                      matching the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                  teamingPolicy:
                    description: The network adapter teaming policy. Can be one of
                      loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, failover_explicit,
                      or loadbalance_loadbased.
                    type: string
                  txUplink:
                    description: If true, a copy of packets sent to the switch will
                      always be forwarded to an uplink in addition to the regular
                      packet forwarded done by the switch.
                    type: boolean
                  uplinks:
                    description: A list of uplink ports. The contents of this list
                      control both the uplink count and names of the uplinks on the
                      DVS across hosts.
                    items:
                      type: string
                    type: array
                  vdpMaximumMbit:
                    description: The maximum allowed usage for the vdp traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  vdpReservationMbit:
                    description: The amount of guaranteed bandwidth for the vdp traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  vdpShareCount:
                    description: The amount of shares to allocate to the vdp traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  vdpShareLevel:
                    description: The allocation level for the vdp traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  version:
                    description: The version of this virtual switch. Allowed versions
                      are 7.0.0, 6.5.0, 6.0.0, 5.5.0, 5.1.0, and 5.0.0.
                    type: string
                  virtualmachineMaximumMbit:
                    description: The maximum allowed usage for the virtualMachine
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  virtualmachineReservationMbit:
                    description: The amount of guaranteed bandwidth for the virtualMachine
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  virtualmachineShareCount:
                    description: The amount of shares to allocate to the virtualMachine
                      traffic class for a custom share level.
                    format: int64
                    type: integer
                  virtualmachineShareLevel:
                    description: The allocation level for the virtualMachine traffic
                      class. Can be one of high, low, normal, or custom.
                    type: string
                  vlanID:
                    description: The VLAN ID for single VLAN mode. 0 denotes no VLAN.
                    format: int64
                    type: integer
                  vlanRange:
                    description: The VLAN ID for single VLAN mode. 0 denotes no VLAN.
                    items:
                      properties:
                        maxVLAN:
                          description: The minimum VLAN to use in the range.
                          format: int64
                          type: integer
                        minVLAN:
                          description: The minimum VLAN to use in the range.
                          format: int64
                          type: integer
                      required:
                      - maxVLAN
                      - minVLAN
                      type: object
                    type: array
                  vmotionMaximumMbit:
                    description: The maximum allowed usage for the vmotion traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  vmotionReservationMbit:
                    description: The amount of guaranteed bandwidth for the vmotion
                      traffic class, in Mbits/sec.
                    format: int64
                    type: integer
                  vmotionShareCount:
                    description: The amount of shares to allocate to the vmotion traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  vmotionShareLevel:
                    description: The allocation level for the vmotion traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  vsanMaximumMbit:
                    description: The maximum allowed usage for the vsan traffic class,
                      in Mbits/sec.
                    format: int64
                    type: integer
                  vsanReservationMbit:
                    description: The amount of guaranteed bandwidth for the vsan traffic
                      class, in Mbits/sec.
                    format: int64
                    type: integer
                  vsanShareCount:
                    description: The amount of shares to allocate to the vsan traffic
                      class for a custom share level.
                    format: int64
                    type: integer
                  vsanShareLevel:
                    description: The allocation level for the vsan traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                required:
                - datacenterID
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
