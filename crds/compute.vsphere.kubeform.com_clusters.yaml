apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: vsphere.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: clusters.compute.vsphere.kubeform.com
spec:
  group: compute.vsphere.kubeform.com
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterID:
                    description: The managed object ID of the datacenter to put the
                      cluster in.
                    type: string
                  dpmAutomationLevel:
                    description: The automation level for host power operations in
                      this cluster. Can be one of manual or automated.
                    type: string
                  dpmEnabled:
                    description: Enable DPM support for DRS. This allows you to dynamically
                      control the power of hosts depending on the needs of virtual
                      machines in the cluster. Requires that DRS be enabled.
                    type: boolean
                  dpmThreshold:
                    description: A value between 1 and 5 indicating the threshold
                      of load within the cluster that influences host power operations.
                      This affects both power on and power off operations - a lower
                      setting will tolerate more of a surplus/deficit than a higher
                      setting.
                    format: int64
                    type: integer
                  drsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for DRS and DPM.
                    type: object
                  drsAutomationLevel:
                    description: The default automation level for all virtual machines
                      in this cluster. Can be one of manual, partiallyAutomated, or
                      fullyAutomated.
                    type: string
                  drsEnablePredictiveDrs:
                    description: When true, enables DRS to use data from vRealize
                      Operations Manager to make proactive DRS recommendations.
                    type: boolean
                  drsEnableVmOverrides:
                    description: When true, allows individual VM overrides within
                      this cluster to be set.
                    type: boolean
                  drsEnabled:
                    description: Enable DRS for this cluster.
                    type: boolean
                  drsMigrationThreshold:
                    description: A value between 1 and 5 indicating the threshold
                      of imbalance tolerated between hosts. A lower setting will tolerate
                      more imbalance while a higher setting will tolerate less.
                    format: int64
                    type: integer
                  folder:
                    description: The name of the folder to locate the cluster in.
                    type: string
                  forceEvacuateOnDestroy:
                    description: Force removal of all hosts in the cluster during
                      destroy and make them standalone hosts. Use of this flag mainly
                      exists for testing and is not recommended in normal use.
                    type: boolean
                  haAdmissionControlFailoverHostSystemIDS:
                    description: When ha_admission_control_policy is failoverHosts,
                      this defines the managed object IDs of hosts to use as dedicated
                      failover hosts. These hosts are kept as available as possible
                      - admission control will block access to the host, and DRS will
                      ignore the host when making recommendations.
                    items:
                      type: string
                    type: array
                  haAdmissionControlHostFailureTolerance:
                    description: The maximum number of failed hosts that admission
                      control tolerates when making decisions on whether to permit
                      virtual machine operations. The maximum is one less than the
                      number of hosts in the cluster.
                    format: int64
                    type: integer
                  haAdmissionControlPerformanceTolerance:
                    description: The percentage of resource reduction that a cluster
                      of VMs can tolerate in case of a failover. A value of 0 produces
                      warnings only, whereas a value of 100 disables the setting.
                    format: int64
                    type: integer
                  haAdmissionControlPolicy:
                    description: The type of admission control policy to use with
                      vSphere HA, which controls whether or not specific VM operations
                      are permitted in the cluster in order to protect the reliability
                      of the cluster. Can be one of resourcePercentage, slotPolicy,
                      failoverHosts, or disabled. Note that disabling admission control
                      is not recommended and can lead to service issues.
                    type: string
                  haAdmissionControlResourcePercentageAutoCompute:
                    description: When ha_admission_control_policy is resourcePercentage,
                      automatically determine available resource percentages by subtracting
                      the average number of host resources represented by the ha_admission_control_host_failure_tolerance
                      setting from the total amount of resources in the cluster. Disable
                      to supply user-defined values.
                    type: boolean
                  haAdmissionControlResourcePercentageCPU:
                    description: When ha_admission_control_policy is resourcePercentage,
                      this controls the user-defined percentage of CPU resources in
                      the cluster to reserve for failover.
                    format: int64
                    type: integer
                  haAdmissionControlResourcePercentageMemory:
                    description: When ha_admission_control_policy is resourcePercentage,
                      this controls the user-defined percentage of memory resources
                      in the cluster to reserve for failover.
                    format: int64
                    type: integer
                  haAdmissionControlSlotPolicyExplicitCPU:
                    description: When ha_admission_control_policy is slotPolicy, this
                      controls the user-defined CPU slot size, in MHz.
                    format: int64
                    type: integer
                  haAdmissionControlSlotPolicyExplicitMemory:
                    description: When ha_admission_control_policy is slotPolicy, this
                      controls the user-defined memory slot size, in MB.
                    format: int64
                    type: integer
                  haAdmissionControlSlotPolicyUseExplicitSize:
                    description: When ha_admission_control_policy is slotPolicy, this
                      setting controls whether or not you wish to supply explicit
                      values to CPU and memory slot sizes. The default is to gather
                      a automatic average based on all powered-on virtual machines
                      currently in the cluster.
                    type: boolean
                  haAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for vSphere HA.
                    type: object
                  haDatastoreApdRecoveryAction:
                    description: When ha_vm_component_protection is enabled, controls
                      the action to take on virtual machines if an APD status on an
                      affected datastore clears in the middle of an APD event. Can
                      be one of none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: When ha_vm_component_protection is enabled, controls
                      the action to take on virtual machines when the cluster has
                      detected loss to all paths to a relevant datastore. Can be one
                      of disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: When ha_vm_component_protection is enabled, controls
                      the delay in seconds to wait after an APD timeout event to execute
                      the response action defined in ha_datastore_apd_response.
                    format: int64
                    type: integer
                  haDatastorePdlResponse:
                    description: When ha_vm_component_protection is enabled, controls
                      the action to take on virtual machines when the cluster has
                      detected a permanent device loss to a relevant datastore. Can
                      be one of disabled, warning, or restartAggressive.
                    type: string
                  haEnabled:
                    description: Enable vSphere HA for this cluster.
                    type: boolean
                  haHeartbeatDatastoreIDS:
                    description: The list of managed object IDs for preferred datastores
                      to use for HA heartbeating. This setting is only useful when
                      ha_heartbeat_datastore_policy is set to either userSelectedDs
                      or allFeasibleDsWithUserPreference.
                    items:
                      type: string
                    type: array
                  haHeartbeatDatastorePolicy:
                    description: The selection policy for HA heartbeat datastores.
                      Can be one of allFeasibleDs, userSelectedDs, or allFeasibleDsWithUserPreference.
                    type: string
                  haHostIsolationResponse:
                    description: The action to take on virtual machines when a host
                      has detected that it has been isolated from the rest of the
                      cluster. Can be one of none, powerOff, or shutdown.
                    type: string
                  haHostMonitoring:
                    description: Global setting that controls whether vSphere HA remediates
                      VMs on host failure. Can be one of enabled or disabled.
                    type: string
                  haVmComponentProtection:
                    description: Controls vSphere VM component protection for virtual
                      machines in this cluster. This allows vSphere HA to react to
                      failures between hosts and specific virtual machine components,
                      such as datastores. Can be one of enabled or disabled.
                    type: string
                  haVmDependencyRestartCondition:
                    description: The condition used to determine whether or not VMs
                      in a certain restart priority class are online, allowing HA
                      to move on to restarting VMs on the next priority. Can be one
                      of none, poweredOn, guestHbStatusGreen, or appHbStatusGreen.
                    type: string
                  haVmFailureInterval:
                    description: If a heartbeat from a virtual machine is not received
                      within this configured interval, the virtual machine is marked
                      as failed. The value is in seconds.
                    format: int64
                    type: integer
                  haVmMaximumFailureWindow:
                    description: The length of the reset window in which ha_vm_maximum_resets
                      can operate. When this window expires, no more resets are attempted
                      regardless of the setting configured in ha_vm_maximum_resets.
                      -1 means no window, meaning an unlimited reset time is allotted.
                    format: int64
                    type: integer
                  haVmMaximumResets:
                    description: The maximum number of resets that HA will perform
                      to a virtual machine when responding to a failure event.
                    format: int64
                    type: integer
                  haVmMinimumUptime:
                    description: The time, in seconds, that HA waits after powering
                      on a virtual machine before monitoring for heartbeats.
                    format: int64
                    type: integer
                  haVmMonitoring:
                    description: The type of virtual machine monitoring to use when
                      HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmRestartAdditionalDelay:
                    description: Additional delay in seconds after ready condition
                      is met. A VM is considered ready at this point.
                    format: int64
                    type: integer
                  haVmRestartPriority:
                    description: The default restart priority for affected VMs when
                      vSphere detects a host failure. Can be one of lowest, low, medium,
                      high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: The maximum time, in seconds, that vSphere HA will
                      wait for virtual machines in one priority to be ready before
                      proceeding with the next priority.
                    format: int64
                    type: integer
                  hostClusterExitTimeout:
                    description: The timeout for each host maintenance mode operation
                      when removing hosts from a cluster.
                    format: int64
                    type: integer
                  hostManaged:
                    description: Must be set if cluster enrollment is managed from
                      host resource.
                    type: boolean
                  hostSystemIDS:
                    description: The managed object IDs of the hosts to put in the
                      cluster.
                    items:
                      type: string
                    maxItems: 64
                    type: array
                  id:
                    type: string
                  name:
                    description: Name for the new cluster.
                    type: string
                  proactiveHaAutomationLevel:
                    description: The DRS behavior for proactive HA recommendations.
                      Can be one of Automated or Manual.
                    type: string
                  proactiveHaEnabled:
                    description: Enables proactive HA, allowing for vSphere to get
                      HA data from external providers and use DRS to perform remediation.
                    type: boolean
                  proactiveHaModerateRemediation:
                    description: The configured remediation for moderately degraded
                      hosts. Can be one of MaintenanceMode or QuarantineMode. Note
                      that this cannot be set to MaintenanceMode when proactive_ha_severe_remediation
                      is set to QuarantineMode.
                    type: string
                  proactiveHaProviderIDS:
                    description: The list of IDs for health update providers configured
                      for this cluster.
                    items:
                      type: string
                    type: array
                  proactiveHaSevereRemediation:
                    description: The configured remediation for severely degraded
                      hosts. Can be one of MaintenanceMode or QuarantineMode. Note
                      that this cannot be set to QuarantineMode when proactive_ha_moderate_remediation
                      is set to MaintenanceMode.
                    type: string
                  resourcePoolID:
                    description: The managed object ID of the cluster's root resource
                      pool.
                    type: string
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                  vsanDiskGroup:
                    description: A list of disk UUIDs to add to the vSAN cluster.
                    items:
                      properties:
                        cache:
                          description: Cache disk.
                          type: string
                        storage:
                          description: List of storage disks.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  vsanEnabled:
                    description: Whether the VSAN service is enabled for the cluster.
                    type: boolean
                required:
                - datacenterID
                - name
                type: object
              state:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterID:
                    description: The managed object ID of the datacenter to put the
                      cluster in.
                    type: string
                  dpmAutomationLevel:
                    description: The automation level for host power operations in
                      this cluster. Can be one of manual or automated.
                    type: string
                  dpmEnabled:
                    description: Enable DPM support for DRS. This allows you to dynamically
                      control the power of hosts depending on the needs of virtual
                      machines in the cluster. Requires that DRS be enabled.
                    type: boolean
                  dpmThreshold:
                    description: A value between 1 and 5 indicating the threshold
                      of load within the cluster that influences host power operations.
                      This affects both power on and power off operations - a lower
                      setting will tolerate more of a surplus/deficit than a higher
                      setting.
                    format: int64
                    type: integer
                  drsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for DRS and DPM.
                    type: object
                  drsAutomationLevel:
                    description: The default automation level for all virtual machines
                      in this cluster. Can be one of manual, partiallyAutomated, or
                      fullyAutomated.
                    type: string
                  drsEnablePredictiveDrs:
                    description: When true, enables DRS to use data from vRealize
                      Operations Manager to make proactive DRS recommendations.
                    type: boolean
                  drsEnableVmOverrides:
                    description: When true, allows individual VM overrides within
                      this cluster to be set.
                    type: boolean
                  drsEnabled:
                    description: Enable DRS for this cluster.
                    type: boolean
                  drsMigrationThreshold:
                    description: A value between 1 and 5 indicating the threshold
                      of imbalance tolerated between hosts. A lower setting will tolerate
                      more imbalance while a higher setting will tolerate less.
                    format: int64
                    type: integer
                  folder:
                    description: The name of the folder to locate the cluster in.
                    type: string
                  forceEvacuateOnDestroy:
                    description: Force removal of all hosts in the cluster during
                      destroy and make them standalone hosts. Use of this flag mainly
                      exists for testing and is not recommended in normal use.
                    type: boolean
                  haAdmissionControlFailoverHostSystemIDS:
                    description: When ha_admission_control_policy is failoverHosts,
                      this defines the managed object IDs of hosts to use as dedicated
                      failover hosts. These hosts are kept as available as possible
                      - admission control will block access to the host, and DRS will
                      ignore the host when making recommendations.
                    items:
                      type: string
                    type: array
                  haAdmissionControlHostFailureTolerance:
                    description: The maximum number of failed hosts that admission
                      control tolerates when making decisions on whether to permit
                      virtual machine operations. The maximum is one less than the
                      number of hosts in the cluster.
                    format: int64
                    type: integer
                  haAdmissionControlPerformanceTolerance:
                    description: The percentage of resource reduction that a cluster
                      of VMs can tolerate in case of a failover. A value of 0 produces
                      warnings only, whereas a value of 100 disables the setting.
                    format: int64
                    type: integer
                  haAdmissionControlPolicy:
                    description: The type of admission control policy to use with
                      vSphere HA, which controls whether or not specific VM operations
                      are permitted in the cluster in order to protect the reliability
                      of the cluster. Can be one of resourcePercentage, slotPolicy,
                      failoverHosts, or disabled. Note that disabling admission control
                      is not recommended and can lead to service issues.
                    type: string
                  haAdmissionControlResourcePercentageAutoCompute:
                    description: When ha_admission_control_policy is resourcePercentage,
                      automatically determine available resource percentages by subtracting
                      the average number of host resources represented by the ha_admission_control_host_failure_tolerance
                      setting from the total amount of resources in the cluster. Disable
                      to supply user-defined values.
                    type: boolean
                  haAdmissionControlResourcePercentageCPU:
                    description: When ha_admission_control_policy is resourcePercentage,
                      this controls the user-defined percentage of CPU resources in
                      the cluster to reserve for failover.
                    format: int64
                    type: integer
                  haAdmissionControlResourcePercentageMemory:
                    description: When ha_admission_control_policy is resourcePercentage,
                      this controls the user-defined percentage of memory resources
                      in the cluster to reserve for failover.
                    format: int64
                    type: integer
                  haAdmissionControlSlotPolicyExplicitCPU:
                    description: When ha_admission_control_policy is slotPolicy, this
                      controls the user-defined CPU slot size, in MHz.
                    format: int64
                    type: integer
                  haAdmissionControlSlotPolicyExplicitMemory:
                    description: When ha_admission_control_policy is slotPolicy, this
                      controls the user-defined memory slot size, in MB.
                    format: int64
                    type: integer
                  haAdmissionControlSlotPolicyUseExplicitSize:
                    description: When ha_admission_control_policy is slotPolicy, this
                      setting controls whether or not you wish to supply explicit
                      values to CPU and memory slot sizes. The default is to gather
                      a automatic average based on all powered-on virtual machines
                      currently in the cluster.
                    type: boolean
                  haAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for vSphere HA.
                    type: object
                  haDatastoreApdRecoveryAction:
                    description: When ha_vm_component_protection is enabled, controls
                      the action to take on virtual machines if an APD status on an
                      affected datastore clears in the middle of an APD event. Can
                      be one of none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: When ha_vm_component_protection is enabled, controls
                      the action to take on virtual machines when the cluster has
                      detected loss to all paths to a relevant datastore. Can be one
                      of disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: When ha_vm_component_protection is enabled, controls
                      the delay in seconds to wait after an APD timeout event to execute
                      the response action defined in ha_datastore_apd_response.
                    format: int64
                    type: integer
                  haDatastorePdlResponse:
                    description: When ha_vm_component_protection is enabled, controls
                      the action to take on virtual machines when the cluster has
                      detected a permanent device loss to a relevant datastore. Can
                      be one of disabled, warning, or restartAggressive.
                    type: string
                  haEnabled:
                    description: Enable vSphere HA for this cluster.
                    type: boolean
                  haHeartbeatDatastoreIDS:
                    description: The list of managed object IDs for preferred datastores
                      to use for HA heartbeating. This setting is only useful when
                      ha_heartbeat_datastore_policy is set to either userSelectedDs
                      or allFeasibleDsWithUserPreference.
                    items:
                      type: string
                    type: array
                  haHeartbeatDatastorePolicy:
                    description: The selection policy for HA heartbeat datastores.
                      Can be one of allFeasibleDs, userSelectedDs, or allFeasibleDsWithUserPreference.
                    type: string
                  haHostIsolationResponse:
                    description: The action to take on virtual machines when a host
                      has detected that it has been isolated from the rest of the
                      cluster. Can be one of none, powerOff, or shutdown.
                    type: string
                  haHostMonitoring:
                    description: Global setting that controls whether vSphere HA remediates
                      VMs on host failure. Can be one of enabled or disabled.
                    type: string
                  haVmComponentProtection:
                    description: Controls vSphere VM component protection for virtual
                      machines in this cluster. This allows vSphere HA to react to
                      failures between hosts and specific virtual machine components,
                      such as datastores. Can be one of enabled or disabled.
                    type: string
                  haVmDependencyRestartCondition:
                    description: The condition used to determine whether or not VMs
                      in a certain restart priority class are online, allowing HA
                      to move on to restarting VMs on the next priority. Can be one
                      of none, poweredOn, guestHbStatusGreen, or appHbStatusGreen.
                    type: string
                  haVmFailureInterval:
                    description: If a heartbeat from a virtual machine is not received
                      within this configured interval, the virtual machine is marked
                      as failed. The value is in seconds.
                    format: int64
                    type: integer
                  haVmMaximumFailureWindow:
                    description: The length of the reset window in which ha_vm_maximum_resets
                      can operate. When this window expires, no more resets are attempted
                      regardless of the setting configured in ha_vm_maximum_resets.
                      -1 means no window, meaning an unlimited reset time is allotted.
                    format: int64
                    type: integer
                  haVmMaximumResets:
                    description: The maximum number of resets that HA will perform
                      to a virtual machine when responding to a failure event.
                    format: int64
                    type: integer
                  haVmMinimumUptime:
                    description: The time, in seconds, that HA waits after powering
                      on a virtual machine before monitoring for heartbeats.
                    format: int64
                    type: integer
                  haVmMonitoring:
                    description: The type of virtual machine monitoring to use when
                      HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmRestartAdditionalDelay:
                    description: Additional delay in seconds after ready condition
                      is met. A VM is considered ready at this point.
                    format: int64
                    type: integer
                  haVmRestartPriority:
                    description: The default restart priority for affected VMs when
                      vSphere detects a host failure. Can be one of lowest, low, medium,
                      high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: The maximum time, in seconds, that vSphere HA will
                      wait for virtual machines in one priority to be ready before
                      proceeding with the next priority.
                    format: int64
                    type: integer
                  hostClusterExitTimeout:
                    description: The timeout for each host maintenance mode operation
                      when removing hosts from a cluster.
                    format: int64
                    type: integer
                  hostManaged:
                    description: Must be set if cluster enrollment is managed from
                      host resource.
                    type: boolean
                  hostSystemIDS:
                    description: The managed object IDs of the hosts to put in the
                      cluster.
                    items:
                      type: string
                    maxItems: 64
                    type: array
                  id:
                    type: string
                  name:
                    description: Name for the new cluster.
                    type: string
                  proactiveHaAutomationLevel:
                    description: The DRS behavior for proactive HA recommendations.
                      Can be one of Automated or Manual.
                    type: string
                  proactiveHaEnabled:
                    description: Enables proactive HA, allowing for vSphere to get
                      HA data from external providers and use DRS to perform remediation.
                    type: boolean
                  proactiveHaModerateRemediation:
                    description: The configured remediation for moderately degraded
                      hosts. Can be one of MaintenanceMode or QuarantineMode. Note
                      that this cannot be set to MaintenanceMode when proactive_ha_severe_remediation
                      is set to QuarantineMode.
                    type: string
                  proactiveHaProviderIDS:
                    description: The list of IDs for health update providers configured
                      for this cluster.
                    items:
                      type: string
                    type: array
                  proactiveHaSevereRemediation:
                    description: The configured remediation for severely degraded
                      hosts. Can be one of MaintenanceMode or QuarantineMode. Note
                      that this cannot be set to QuarantineMode when proactive_ha_moderate_remediation
                      is set to MaintenanceMode.
                    type: string
                  resourcePoolID:
                    description: The managed object ID of the cluster's root resource
                      pool.
                    type: string
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                  vsanDiskGroup:
                    description: A list of disk UUIDs to add to the vSAN cluster.
                    items:
                      properties:
                        cache:
                          description: Cache disk.
                          type: string
                        storage:
                          description: List of storage disks.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  vsanEnabled:
                    description: Whether the VSAN service is enabled for the cluster.
                    type: boolean
                required:
                - datacenterID
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
