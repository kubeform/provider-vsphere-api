apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: vsphere.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: clusters.datastore.vsphere.kubeform.com
spec:
  group: datastore.vsphere.kubeform.com
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterID:
                    description: The managed object ID of the datacenter to put the
                      datastore cluster in.
                    type: string
                  folder:
                    description: The name of the folder to locate the datastore cluster
                      in.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name for the new storage pod.
                    type: string
                  sdrsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for storage DRS.
                    type: object
                  sdrsAutomationLevel:
                    description: The default automation level for all virtual machines
                      in this storage cluster.
                    type: string
                  sdrsDefaultIntraVmAffinity:
                    description: When true, storage DRS keeps VMDKs for individual
                      VMs on the same datastore by default.
                    type: boolean
                  sdrsEnabled:
                    description: Enable storage DRS for this datastore cluster.
                    type: boolean
                  sdrsFreeSpaceThreshold:
                    description: The threshold, in GB, that storage DRS uses to make
                      decisions to migrate VMs out of a datastore.
                    format: int64
                    type: integer
                  sdrsFreeSpaceThresholdMode:
                    description: The free space threshold to use. When set to utilization,
                      drs_space_utilization_threshold is used, and when set to freeSpace,
                      drs_free_space_threshold is used.
                    type: string
                  sdrsFreeSpaceUtilizationDifference:
                    description: The threshold, in percent, of difference between
                      space utilization in datastores before storage DRS makes decisions
                      to balance the space.
                    format: int64
                    type: integer
                  sdrsIoBalanceAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      I/O load imbalances.
                    type: string
                  sdrsIoLatencyThreshold:
                    description: The I/O latency threshold, in milliseconds, that
                      storage DRS uses to make recommendations to move disks from
                      this datastore.
                    format: int64
                    type: integer
                  sdrsIoLoadBalanceEnabled:
                    description: Enable I/O load balancing for this datastore cluster.
                    type: boolean
                  sdrsIoLoadImbalanceThreshold:
                    description: The difference between load in datastores in the
                      cluster before storage DRS makes recommendations to balance
                      the load.
                    format: int64
                    type: integer
                  sdrsIoReservableIopsThreshold:
                    description: The threshold of reservable IOPS of all virtual machines
                      on the datastore before storage DRS makes recommendations to
                      move VMs off of a datastore.
                    format: int64
                    type: integer
                  sdrsIoReservablePercentThreshold:
                    description: The threshold, in percent, of actual estimated performance
                      of the datastore (in IOPS) that storage DRS uses to make recommendations
                      to move VMs off of a datastore when the total reservable IOPS
                      exceeds the threshold.
                    format: int64
                    type: integer
                  sdrsIoReservableThresholdMode:
                    description: The reservable IOPS threshold to use, percent in
                      the event of automatic, or manual threshold in the event of
                      manual.
                    type: string
                  sdrsLoadBalanceInterval:
                    description: The storage DRS poll interval, in minutes.
                    format: int64
                    type: integer
                  sdrsPolicyEnforcementAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      storage and VM policy violations.
                    type: string
                  sdrsRuleEnforcementAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      affinity rule violations.
                    type: string
                  sdrsSpaceBalanceAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      disk space imbalances.
                    type: string
                  sdrsSpaceUtilizationThreshold:
                    description: The threshold, in percent of used space, that storage
                      DRS uses to make decisions to migrate VMs out of a datastore.
                    format: int64
                    type: integer
                  sdrsVmEvacuationAutomationLevel:
                    description: Overrides the default automation settings when generating
                      recommendations for datastore evacuation.
                    type: string
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                required:
                - datacenterID
                - name
                type: object
              state:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterID:
                    description: The managed object ID of the datacenter to put the
                      datastore cluster in.
                    type: string
                  folder:
                    description: The name of the folder to locate the datastore cluster
                      in.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name for the new storage pod.
                    type: string
                  sdrsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for storage DRS.
                    type: object
                  sdrsAutomationLevel:
                    description: The default automation level for all virtual machines
                      in this storage cluster.
                    type: string
                  sdrsDefaultIntraVmAffinity:
                    description: When true, storage DRS keeps VMDKs for individual
                      VMs on the same datastore by default.
                    type: boolean
                  sdrsEnabled:
                    description: Enable storage DRS for this datastore cluster.
                    type: boolean
                  sdrsFreeSpaceThreshold:
                    description: The threshold, in GB, that storage DRS uses to make
                      decisions to migrate VMs out of a datastore.
                    format: int64
                    type: integer
                  sdrsFreeSpaceThresholdMode:
                    description: The free space threshold to use. When set to utilization,
                      drs_space_utilization_threshold is used, and when set to freeSpace,
                      drs_free_space_threshold is used.
                    type: string
                  sdrsFreeSpaceUtilizationDifference:
                    description: The threshold, in percent, of difference between
                      space utilization in datastores before storage DRS makes decisions
                      to balance the space.
                    format: int64
                    type: integer
                  sdrsIoBalanceAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      I/O load imbalances.
                    type: string
                  sdrsIoLatencyThreshold:
                    description: The I/O latency threshold, in milliseconds, that
                      storage DRS uses to make recommendations to move disks from
                      this datastore.
                    format: int64
                    type: integer
                  sdrsIoLoadBalanceEnabled:
                    description: Enable I/O load balancing for this datastore cluster.
                    type: boolean
                  sdrsIoLoadImbalanceThreshold:
                    description: The difference between load in datastores in the
                      cluster before storage DRS makes recommendations to balance
                      the load.
                    format: int64
                    type: integer
                  sdrsIoReservableIopsThreshold:
                    description: The threshold of reservable IOPS of all virtual machines
                      on the datastore before storage DRS makes recommendations to
                      move VMs off of a datastore.
                    format: int64
                    type: integer
                  sdrsIoReservablePercentThreshold:
                    description: The threshold, in percent, of actual estimated performance
                      of the datastore (in IOPS) that storage DRS uses to make recommendations
                      to move VMs off of a datastore when the total reservable IOPS
                      exceeds the threshold.
                    format: int64
                    type: integer
                  sdrsIoReservableThresholdMode:
                    description: The reservable IOPS threshold to use, percent in
                      the event of automatic, or manual threshold in the event of
                      manual.
                    type: string
                  sdrsLoadBalanceInterval:
                    description: The storage DRS poll interval, in minutes.
                    format: int64
                    type: integer
                  sdrsPolicyEnforcementAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      storage and VM policy violations.
                    type: string
                  sdrsRuleEnforcementAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      affinity rule violations.
                    type: string
                  sdrsSpaceBalanceAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      disk space imbalances.
                    type: string
                  sdrsSpaceUtilizationThreshold:
                    description: The threshold, in percent of used space, that storage
                      DRS uses to make decisions to migrate VMs out of a datastore.
                    format: int64
                    type: integer
                  sdrsVmEvacuationAutomationLevel:
                    description: Overrides the default automation settings when generating
                      recommendations for datastore evacuation.
                    type: string
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                required:
                - datacenterID
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
