/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-vsphere-api/apis/compute/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterVmDependencyRuleLister helps list ClusterVmDependencyRules.
// All objects returned here must be treated as read-only.
type ClusterVmDependencyRuleLister interface {
	// List lists all ClusterVmDependencyRules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterVmDependencyRule, err error)
	// ClusterVmDependencyRules returns an object that can list and get ClusterVmDependencyRules.
	ClusterVmDependencyRules(namespace string) ClusterVmDependencyRuleNamespaceLister
	ClusterVmDependencyRuleListerExpansion
}

// clusterVmDependencyRuleLister implements the ClusterVmDependencyRuleLister interface.
type clusterVmDependencyRuleLister struct {
	indexer cache.Indexer
}

// NewClusterVmDependencyRuleLister returns a new ClusterVmDependencyRuleLister.
func NewClusterVmDependencyRuleLister(indexer cache.Indexer) ClusterVmDependencyRuleLister {
	return &clusterVmDependencyRuleLister{indexer: indexer}
}

// List lists all ClusterVmDependencyRules in the indexer.
func (s *clusterVmDependencyRuleLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterVmDependencyRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterVmDependencyRule))
	})
	return ret, err
}

// ClusterVmDependencyRules returns an object that can list and get ClusterVmDependencyRules.
func (s *clusterVmDependencyRuleLister) ClusterVmDependencyRules(namespace string) ClusterVmDependencyRuleNamespaceLister {
	return clusterVmDependencyRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterVmDependencyRuleNamespaceLister helps list and get ClusterVmDependencyRules.
// All objects returned here must be treated as read-only.
type ClusterVmDependencyRuleNamespaceLister interface {
	// List lists all ClusterVmDependencyRules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterVmDependencyRule, err error)
	// Get retrieves the ClusterVmDependencyRule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ClusterVmDependencyRule, error)
	ClusterVmDependencyRuleNamespaceListerExpansion
}

// clusterVmDependencyRuleNamespaceLister implements the ClusterVmDependencyRuleNamespaceLister
// interface.
type clusterVmDependencyRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterVmDependencyRules in the indexer for a given namespace.
func (s clusterVmDependencyRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterVmDependencyRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterVmDependencyRule))
	})
	return ret, err
}

// Get retrieves the ClusterVmDependencyRule from the indexer for a given namespace and name.
func (s clusterVmDependencyRuleNamespaceLister) Get(name string) (*v1alpha1.ClusterVmDependencyRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clustervmdependencyrule"), name)
	}
	return obj.(*v1alpha1.ClusterVmDependencyRule), nil
}
